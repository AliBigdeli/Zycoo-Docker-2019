server {
    listen 443 ssl;
 
    ssl_certificate /etc/nginx/cert/server.crt;
    ssl_certificate_key /etc/nginx/cert/server.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;

    #asterisk api proxy
    location ^~/coocenter-api/asterisk/{
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers authorization,content-type;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS;
            return 204;
        }
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://10.103.0.1:8010/asterisk/;
    }
 
    #broadcast gateway api proxy
    location ^~/coocenter-api/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://zycoo_broadcast_gateway:8000;
    }

    location ^~/modbus-api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers authorization,content-type;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS;
            return 204;
        }
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://zycoo_broadcast_gateway:8006/modbus/;
    }

    #easydarwin api proxy
    location ^~/easydarwin-api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers authorization,content-type;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS;
            return 204;
        }
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://10.103.0.1:8002/;
    }

    #ws porxy
    location ^~/socket.io/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://zycoo_broadcast_gateway:8000;
    }

    #ws porxy
    location ^~/ginapi/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers authorization,content-type;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS;
            return 204;
        }
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://10.103.0.1:8003;
    }

    location / {
         root /html/;
         try_files $uri $uri/ /index.html;
    }
}
 
server {
    listen 80;
    return 301 https://$host$request_uri;
}
